
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Unity.Burst;
using Unity.Collections;

namespace InfPoints
{

    public static partial class Logger
    {

   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void Log(FixedString32 message)
   		{
   			UnityEngine.Debug.Log(message.ToString());
   		}


   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, int a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, float a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString32 messageFormatString, in FixedString32 a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                        
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void Log(FixedString64 message)
   		{
   			UnityEngine.Debug.Log(message.ToString());
   		}


   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, int a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, float a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString64 messageFormatString, in FixedString32 a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                        
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void Log(FixedString128 message)
   		{
   			UnityEngine.Debug.Log(message.ToString());
   		}


   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, int a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, float a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString128 messageFormatString, in FixedString32 a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                        
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void Log(FixedString512 message)
   		{
   			UnityEngine.Debug.Log(message.ToString());
   		}


   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, int a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, float a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString512 messageFormatString, in FixedString32 a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                        
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void Log(FixedString4096 message)
   		{
   			UnityEngine.Debug.Log(message.ToString());
   		}


   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, int a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, float a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                    
   		[BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a)
   		{
   			var message = FixedString.Format(messageFormatString, a);
   			UnityEngine.Debug.Log(message.ToString());
   		}

   		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, int b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, int b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, int b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, int b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, float b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, float b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, float b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, float b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                               		
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, in FixedString32 b)
   		{
   			var message = FixedString.Format(messageFormatString, a, b);
   			UnityEngine.Debug.Log(message.ToString());
   		}


        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, in FixedString32 b, int c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, in FixedString32 b, float c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                
        [BurstDiscard]
   		[System.Diagnostics.Conditional(LOGGER_SYMBOL)]
   		public static void LogFormat(FixedString4096 messageFormatString, in FixedString32 a, in FixedString32 b, in FixedString32 c)
   		{
   			var message = FixedString.Format(messageFormatString, a, b, c);
   			UnityEngine.Debug.Log(message.ToString());
   		}

                                        
    }
}